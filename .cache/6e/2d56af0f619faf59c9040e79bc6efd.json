{"id":"node_modules/a_mock/partialMock/expect.js","dependencies":[{"name":"/home/wolvecode/projects/my-app/package.json","includedInParent":true,"mtime":1588085941339},{"name":"/home/wolvecode/projects/my-app/.babelrc","includedInParent":true,"mtime":1588027071305},{"name":"/home/wolvecode/projects/my-app/node_modules/a_mock/package.json","includedInParent":true,"mtime":1588085941047},{"name":"./newHasSameArgument","loc":{"line":2,"column":34},"parent":"/home/wolvecode/projects/my-app/node_modules/a_mock/partialMock/expect.js","resolved":"/home/wolvecode/projects/my-app/node_modules/a_mock/partialMock/newHasSameArgument.js"},{"name":"./expectCore","loc":{"line":3,"column":26},"parent":"/home/wolvecode/projects/my-app/node_modules/a_mock/partialMock/expect.js","resolved":"/home/wolvecode/projects/my-app/node_modules/a_mock/partialMock/expectCore.js"}],"generated":{"js":"function expect(index,mockContext) {\t\t\n\tvar newAreSameArgument = require('./newHasSameArgument');\n\tvar expectCore = require('./expectCore');\n\tvar arg = arguments[2];\n\tvar areSameArgument = newAreSameArgument(arg,index);\t\n\tvar nextExpect =  expectCore(areSameArgument,index,mockContext);\n\tfor (var i = 3; i < arguments.length; i++) {\n\t\tvar argument = arguments[i];\n\t\tnextExpect = nextExpect.expect(argument);\n\t};\n\treturn nextExpect;\n}\n\nmodule.exports = expect;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/a_mock/partialMock/expect.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/a_mock/partialMock/expect.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/a_mock/partialMock/expect.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/a_mock/partialMock/expect.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/a_mock/partialMock/expect.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/a_mock/partialMock/expect.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/a_mock/partialMock/expect.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/a_mock/partialMock/expect.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/a_mock/partialMock/expect.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/a_mock/partialMock/expect.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/a_mock/partialMock/expect.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/a_mock/partialMock/expect.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/a_mock/partialMock/expect.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/a_mock/partialMock/expect.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}}],"sources":{"node_modules/a_mock/partialMock/expect.js":"function expect(index,mockContext) {\t\t\n\tvar newAreSameArgument = require('./newHasSameArgument');\n\tvar expectCore = require('./expectCore');\n\tvar arg = arguments[2];\n\tvar areSameArgument = newAreSameArgument(arg,index);\t\n\tvar nextExpect =  expectCore(areSameArgument,index,mockContext);\n\tfor (var i = 3; i < arguments.length; i++) {\n\t\tvar argument = arguments[i];\n\t\tnextExpect = nextExpect.expect(argument);\n\t};\n\treturn nextExpect;\n}\n\nmodule.exports = expect;"},"lineCount":14}},"error":null,"hash":"f69e40a172bc87a11f73c0e1b649e6c3","cacheData":{"env":{}}}